"use client";

import AppLayout from "@components/AppLayout";
import {
  UserState,
  UserContext,
  UserContextValue,
} from '../context/user.context';
import { useSession } from "next-auth/react"
import { useCallback, useEffect, useMemo, useState } from 'react';
import requestManager from '../lib/request/manager';
import 'stylesheets/application.scss';
import { ApiMeResponse } from "./api/v1/me/route";

export const metadata = {
  title: 'Next.js',
  description: 'Generated by Next.js',
}

export default function App({
  children,
}: {
  children: React.ReactNode
}) {
  const { status } = useSession()
  const [user, setUser] = useState<UserState>(undefined);

  const fetchCurrentUser = useCallback(async () => {
    const { user: currentUser } = await requestManager<ApiMeResponse>(
      'GET',
      'v1/me'
    );

    setUser(currentUser);
  }, []);

  useEffect(() => {
    if (status === "authenticated") {
      fetchCurrentUser();
    }

  }, [status, fetchCurrentUser]);

  const userContextValue = useMemo<UserContextValue>(
    () => ({ user, setUser }),
    [user]
  );

  return (
    <UserContext.Provider value={userContextValue}>
      <AppLayout>
          {children}
      </AppLayout>
    </UserContext.Provider>
  )
}
